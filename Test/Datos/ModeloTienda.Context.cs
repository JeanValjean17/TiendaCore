//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CapacitacionEntities : DbContext
    {
        public CapacitacionEntities()
            : base("name=CapacitacionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cliente> clientes { get; set; }
        public virtual DbSet<factura> facturas { get; set; }
        public virtual DbSet<medio_pago_facturas> medio_pago_facturas { get; set; }
        public virtual DbSet<medios_pagos> medios_pagos { get; set; }
        public virtual DbSet<precio_productos> precio_productos { get; set; }
        public virtual DbSet<producto_facturas> producto_facturas { get; set; }
        public virtual DbSet<producto> productos { get; set; }
        public virtual DbSet<sexo> sexos { get; set; }
        public virtual DbSet<tienda> tiendas { get; set; }
        public virtual DbSet<unidade> unidades { get; set; }
    
        public virtual int registrar_cliente(string nombre_cliente, string cedula, Nullable<int> id_sexo)
        {
            var nombre_clienteParameter = nombre_cliente != null ?
                new ObjectParameter("nombre_cliente", nombre_cliente) :
                new ObjectParameter("nombre_cliente", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            var id_sexoParameter = id_sexo.HasValue ?
                new ObjectParameter("id_sexo", id_sexo) :
                new ObjectParameter("id_sexo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrar_cliente", nombre_clienteParameter, cedulaParameter, id_sexoParameter);
        }
    
        public virtual ObjectResult<string> registrar_factura(Nullable<System.DateTime> fecha_facturacion, Nullable<int> codigo_factura, string despachador, string nombre_cliente, string nombre_tienda)
        {
            var fecha_facturacionParameter = fecha_facturacion.HasValue ?
                new ObjectParameter("fecha_facturacion", fecha_facturacion) :
                new ObjectParameter("fecha_facturacion", typeof(System.DateTime));
    
            var codigo_facturaParameter = codigo_factura.HasValue ?
                new ObjectParameter("codigo_factura", codigo_factura) :
                new ObjectParameter("codigo_factura", typeof(int));
    
            var despachadorParameter = despachador != null ?
                new ObjectParameter("despachador", despachador) :
                new ObjectParameter("despachador", typeof(string));
    
            var nombre_clienteParameter = nombre_cliente != null ?
                new ObjectParameter("nombre_cliente", nombre_cliente) :
                new ObjectParameter("nombre_cliente", typeof(string));
    
            var nombre_tiendaParameter = nombre_tienda != null ?
                new ObjectParameter("nombre_tienda", nombre_tienda) :
                new ObjectParameter("nombre_tienda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("registrar_factura", fecha_facturacionParameter, codigo_facturaParameter, despachadorParameter, nombre_clienteParameter, nombre_tiendaParameter);
        }
    
        public virtual int registrar_medio_pago(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrar_medio_pago", nombreParameter);
        }
    
        public virtual int registrar_precio_producto(Nullable<double> precio, Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_fin)
        {
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrar_precio_producto", precioParameter, fecha_inicioParameter, fecha_finParameter);
        }
    
        public virtual int registrar_producto(string nombre_producto, Nullable<int> id_unidad)
        {
            var nombre_productoParameter = nombre_producto != null ?
                new ObjectParameter("nombre_producto", nombre_producto) :
                new ObjectParameter("nombre_producto", typeof(string));
    
            var id_unidadParameter = id_unidad.HasValue ?
                new ObjectParameter("id_unidad", id_unidad) :
                new ObjectParameter("id_unidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrar_producto", nombre_productoParameter, id_unidadParameter);
        }
    
        public virtual ObjectResult<string> registrar_programacion_precio(Nullable<double> precio, Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_fin, string nombre_producto)
        {
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var nombre_productoParameter = nombre_producto != null ?
                new ObjectParameter("nombre_producto", nombre_producto) :
                new ObjectParameter("nombre_producto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("registrar_programacion_precio", precioParameter, fecha_inicioParameter, fecha_finParameter, nombre_productoParameter);
        }
    
        public virtual int registrar_tienda(string nombre_tienda, string nit, string direccion_tienda)
        {
            var nombre_tiendaParameter = nombre_tienda != null ?
                new ObjectParameter("nombre_tienda", nombre_tienda) :
                new ObjectParameter("nombre_tienda", typeof(string));
    
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            var direccion_tiendaParameter = direccion_tienda != null ?
                new ObjectParameter("direccion_tienda", direccion_tienda) :
                new ObjectParameter("direccion_tienda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrar_tienda", nombre_tiendaParameter, nitParameter, direccion_tiendaParameter);
        }
    
        public virtual int registrar_unidad(string nombre_unidad)
        {
            var nombre_unidadParameter = nombre_unidad != null ?
                new ObjectParameter("nombre_unidad", nombre_unidad) :
                new ObjectParameter("nombre_unidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrar_unidad", nombre_unidadParameter);
        }
    }
}
